{
  "version": "v0",
  "revision": "1",
  "commitTime": 1544824316,
  "trustedPassportIssuers": {
    "nih": {
      "issuer": "https://login.nih.gov/oidc",
      "translateUsing": "dbgap_translator",
      "ui": {
        "description": "nih passport issuer",
        "label": "nih passport issuer"
      }
    },
    "test_whitelist_issuer": {
      "issuer": "$$E2E_TRUSTED_SOURCE$$",
      "ui": {
        "description": "trusted source for whitelisting users",
        "label": "trusted source for whitelisting users"
      }
    },
    "ic_issuer": {
      "issuer": "$$E2E_IC_BASE_URL$$/oidc",
      "authUrl": "$$E2E_IC_BASE_URL$$/identity/v1alpha/master/authorize",
      "tokenUrl": "$$E2E_IC_BASE_URL$$/identity/v1alpha/master/token",
      "clientId": "$$E2E_BROKER_ID$$",
      "ui": {
        "description": "The Identity Concentrator to trust for issuing passports",
        "label": "Trusted Identity Issuer"
      }
    }
  },
  "trustedSources": {
    "test_whitelist_source": {
      "sources": [
        "$$E2E_TRUSTED_SOURCE$$"
      ],
      "claims": [
        "testing.only.Whitelist"
      ],
      "ui": {
        "description": "trusted source for whitelisting users",
        "label": "trusted source for whitelisting users"
      }
    }
  },
  "policies": {
    "test_whitelist": {
      "anyOf": [
        {
          "allOf": [
            {
              "type": "testing.only.Whitelist",
              "value": "split_pattern:$$E2E_TEST_WHITELIST_VALUE$$",
              "source": "split_pattern:test_whitelist_source"
            }
          ]
        }
      ],
      "ui": {
        "description": "Whitelist for testing DDAP on non-sensitive data",
        "label": "Whitelist for testing DDAP on non-sensitive data"
      }
    },
    "cag": {
      "anyOf": [
        {
          "allOf": [
            {
              "type": "ControlledAccessGrants",
              "value": "split_pattern:${DATASET}"
            }
          ]
        }
      ],
      "variableDefinitions": {
        "DATASET": {
          "regexp": "^phs\\d{6}$",
          "ui": {
            "description": "The name of an NIH dataset of the form 'phsXXXXXX'"
          }
        }
      },
      "ui": {
        "description": "For testing usage of templated variable lookup in autocomplete",
        "label": "CAG"
      }
    },
    "researcherStatus" : {
      "anyOf": [
        {
          "allOf": [
            {
              "type": "ResearcherStatus",
              "value": "split_pattern:https://www.nature.com/articles/s99999-999-9999-z"
            }
          ]
        }
      ],
      "ui": {
        "description": "For testing usage of lookup in autocomplete",
        "label": "RS"
      }
    },
    "simplePolicy": {
      "anyOf": [
        {
          "allOf": [
            {
              "type": "com.dnastack.test.claim",
              "value": "split_pattern:foobar;foobar2"
            }
          ]
        }
      ],
      "ui": {
        "description": "description",
        "label": "simplePolicy"
      }
    },
    "allTruePolicy": {
      "anyOf": [
        {
          "allOf": [
            {
              "type": "com.dnastack.test.claim",
              "value": "split_pattern:foobar3"
            }
          ]
        }
      ],
      "ui": {
        "description": "description",
        "label": "allTruePolicy"
      }
    },
    "anyTruePolicy": {
      "anyOf": [
        {
          "allOf": [
            {
              "type": "com.dnastack.test.claim",
              "value": "split_pattern:foobar4"
            }
          ]
        }
      ],
      "ui": {
        "description": "description",
        "label": "anyTruePolicy"
      }
    },
    "anyAllTruePolicy": {
      "anyOf": [
        {
          "allOf": [
            {
              "type": "com.dnastack.test.claim",
              "value": "pattern:^.$"
            }
          ]
        }
      ],
      "ui": {
        "description": "description",
        "label": "anyAllTruePolicy"
      }
    }
  },
  "resources": {
    "thousand-genomes": {
      "views": {
        "discovery-access": {
          "serviceTemplate": "beacon",
          "version": "Phase 3",
          "topic": "variants",
          "partition": "all",
          "fidelity": "discovery",
          "geoLocation": "gcp:na/us/us-central1/us-central1-a",
          "contentTypes": [
            "application/bam"
          ],
          "roles": {
            "discovery": {
              "policies": [
                {
                  "name": "test_whitelist"
                }
              ]
            }
          },
          "items": [
            {
              "vars": {
                "url": "https://gatekeeper-cafe-variome.$$E2E_TEST_NAMESPACE$$.dnastack.com/beacon/query"
              }
            }
          ],
          "aud": "https://ga4gh-apis-beacon.dnastack.com",
          "defaultRole": "discovery",
          "ui": {
            "description": "Beacon Discovery server",
            "label": "Beacon Discovery Access"
          }
        },
        "gcs-file-access": {
          "serviceTemplate": "gcs",
          "version": "Phase 3",
          "topic": "variants",
          "partition": "all",
          "fidelity": "normalized",
          "geoLocation": "gcp:na/us/us-central1/us-central1-a",
          "contentTypes": [
            "application/bam"
          ],
          "roles": {
            "viewer": {
              "policies": [
                {
                  "name": "test_whitelist"
                }
              ]
            }
          },
          "items": [
            {
              "vars": {
                "bucket": "ga4gh-apis-controlled-access",
                "project": "ga4gh-apis"
              }
            }
          ],
          "defaultRole": "viewer",
          "ui": {
            "description": "Read files from gcs bucket",
            "label": "Full File Read Access"
          }
        }
      },
      "maxTokenTtl": "7d",
      "ui": {
        "access": "registered, controlled",
        "applyUrl": "http://apply.1000-genomes.org",
        "description": "Demo Controlled Access of a subset of the 1000 Genomes dataset. See: https://www.nature.com/articles/nature15393.",
        "imageUrl": "https://www.genengnews.com/wp-content/uploads/2018/08/Oct1_2015_ErnestoDelAguilaIII_1000GenomesProject9614313724-1.jpg",
        "infoUrl": "http://info.1000-genomes.org",
        "label": "1000 Genomes (non-prod)",
        "owner": "Human Genome Project",
        "size": "250 GB",
        "tags": "Demo, Genomics, Research",
        "troubleshootUrl": "http://troubleshoot.1000-genomes.org",
        "year": "2017"
      }
    },
    "ga4gh-apis": {
      "views": {
        "beacon": {
          "serviceTemplate": "beacon",
          "version": "Phase 3",
          "topic": "variants",
          "partition": "all",
          "fidelity": "discovery",
          "geoLocation": "gcp:na/us/us-central1/us-central1-a",
          "contentTypes": [
            "application/bam"
          ],
          "roles": {
            "discovery": {
              "policies": [
                {
                  "name": "test_whitelist"
                }
              ]
            }
          },
          "items": [
            {
              "vars": {
                "url": "https://gatekeeper-cafe-variome.$$E2E_TEST_NAMESPACE$$.dnastack.com/beacon/query"
              }
            }
          ],
          "aud": "https://ga4gh-apis-beacon.dnastack.com",
          "defaultRole": "discovery",
          "ui": {
            "description": "Search data from Beacon Discovery server",
            "label": "Beacon Discovery"
          }
        },
        "gcs_read": {
          "serviceTemplate": "gcs",
          "version": "Phase 3",
          "topic": "variants",
          "partition": "all",
          "fidelity": "normalized",
          "geoLocation": "gcp:na/us/us-central1/us-central1-a",
          "contentTypes": [
            "application/bam"
          ],
          "roles": {
            "viewer": {
              "policies": [
                {
                  "name": "test_whitelist"
                }
              ]
            }
          },
          "items": [
            {
              "vars": {
                "bucket": "$$E2E_TEST_BUCKET$$",
                "project": "$$E2E_TEST_PROJECT$$"
              }
            }
          ],
          "defaultRole": "viewer",
          "ui": {
            "description": "Read files from gcs bucket",
            "label": "File Read"
          }
        }
      },
      "maxTokenTtl": "1h",
      "ui": {
        "access": "controlled",
        "applyUrl": "http://apply.ga4gh-apis.org",
        "description": "Google demo of GA4GH APIs using a subset of 1000 Genomes data. See: https://www.nature.com/articles/nature15393.",
        "imageUrl": "https://www.ebi.ac.uk/sites/ebi.ac.uk/files/groups/external_relations/images/wide-imagery/Global_Alliance_news_logo_780x400_0.jpg",
        "infoUrl": "http://info.ga4gh-apis.org",
        "label": "GA4GH APIs",
        "owner": "Human Genome Project",
        "size": "200 GB",
        "tags": "Demo, Genomes, Research",
        "troubleshootUrl": "http://troubleshoot.ga4gh-apis.org",
        "year": "2016"
      }
    },
    "wes-resource": {
      "views": {
        "wes-view": {
          "serviceTemplate": "wes",
          "version": "1",
          "contentTypes": [],
          "roles": {
            "execute": {
              "policies": [
                {
                  "name": "test_whitelist"
                }
              ]
            }
          },
          "items": [
            {
              "vars": {
                "url": "https://ddap-wes-service.$$E2E_TEST_NAMESPACE$$.dnastack.com"
              }
            }
          ],
          "aud": "ddap-wes",
          "defaultRole": "execute",
          "ui": {
            "description": "wes-view",
            "label": "WES View"
          }
        }
      },
      "ui": {
        "access": "",
        "applyUrl": "",
        "description": "wes-resource",
        "imageUrl": "",
        "infoUrl": "",
        "label": "WES Resource",
        "owner": "",
        "size": "",
        "tags": "",
        "troubleshootUrl": "",
        "year": ""
      }
    }
  },
  "clients": {
    "this_ddap": {
      "clientId": "$$E2E_CLIENT_ID$$",
      "scope": "openid ga4gh_passport_v1 account_admin identities profile offline_access",
      "grant_types": ["authorization_code", "refresh_token"],
      "response_types": ["code"],
      "ui": {
        "description": "This DDAP under test",
        "label": "DAM DDAP"
      },
      "redirectUris": [
        "http://localhost:8085",
        "https://ddap-explore.staging.dnastack.com",
        "https://ddap-explore-candidate.staging.dnastack.com",
        "https://ddap-explore.prod.dnastack.com",
        "https://ddap-explore-candidate.prod.dnastack.com"
      ]
    }
  },
  "serviceTemplates": {
    "beacon": {
      "targetAdapter": "token:jwt:gatekeeper",
      "itemFormat": "url",
      "interfaces": {
        "http:beacon": "${url}"
      },
      "roles": {
        "basic_discovery": {
          "targetScopes": [
            "registered"
          ],
          "damRoleCategories": [
            "exists"
          ],
          "ui": {
            "description": "Query genome data and return 'found' or 'not found' status",
            "label": "Discovery Beacon Search without Metadata"
          }
        },
        "discovery": {
          "targetScopes": [
            "registered",
            "controlled"
          ],
          "damRoleCategories": [
            "metadata"
          ],
          "ui": {
            "description": "Query genome data and receive metadata results",
            "label": "Discovery Beacon Search with Metadata"
          }
        }
      },
      "ui": {
        "description": "Query genome data from Beacon Discovery",
        "label": "Beacon Discovery Search"
      }
    },
    "bigquery": {
      "targetAdapter": "token:gcp:sa",
      "itemFormat": "bigquery",
      "interfaces": {
        "http:gcp:bq": "https://www.googleapis.com/bigquery/v1/projects/${project}"
      },
      "roles": {
        "editor": {
          "targetRoles": [
            "roles/bigquery.dataEditor"
          ],
          "targetScopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "damRoleCategories": [
            "metadata",
            "list",
            "read",
            "write"
          ],
          "ui": {
            "description": "Query and modify tables and table metadata",
            "label": "BigQuery Editor"
          }
        },
        "viewer": {
          "targetRoles": [
            "roles/BQReader"
          ],
          "targetScopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "damRoleCategories": [
            "metadata",
            "list",
            "read"
          ],
          "ui": {
            "description": "Query tables and view table metadata",
            "label": "BigQuery Viewer"
          }
        }
      },
      "ui": {
        "description": "Offers Google BigQuery access",
        "label": "Google BigQuery"
      }
    },
    "gcs": {
      "targetAdapter": "token:gcp:sa",
      "itemFormat": "gcs",
      "interfaces": {
        "gcp:gs": "gs://${bucket}",
        "http:gcp:gs": "https://www.googleapis.com/storage/v1/b/${bucket}",
        "http:gcp:http": "https://storage.googleapis.com/${bucket}"
      },
      "roles": {
        "creator": {
          "targetRoles": [
            "roles/storage.objectCreator"
          ],
          "damRoleCategories": [
            "write"
          ],
          "ui": {
            "description": "Write files (without read access)",
            "label": "File Creator"
          }
        },
        "editor": {
          "targetRoles": [
            "roles/storage.objectViewer",
            "roles/storage.objectCreator"
          ],
          "targetScopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "email",
            "openid",
            "profile"
          ],
          "damRoleCategories": [
            "metadata",
            "list",
            "read",
            "write"
          ],
          "ui": {
            "description": "Read and write files plus manipulate file metadata",
            "label": "File Editor"
          }
        },
        "viewer": {
          "targetRoles": [
            "roles/storage.objectViewer"
          ],
          "targetScopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "email",
            "openid",
            "profile"
          ],
          "damRoleCategories": [
            "metadata",
            "list",
            "read"
          ],
          "ui": {
            "description": "List and read files",
            "label": "File Viewer"
          }
        }
      },
      "ui": {
        "description": "Offers Google Cloud Storage access",
        "label": "Google Cloud Storage"
      }
    },
    "views": {
      "targetAdapter": "token:aggregate:view",
      "itemFormat": "view",
      "roles": {
        "viewer": {
          "damRoleCategories": [
            "metadata",
            "list",
            "read"
          ],
          "ui": {
            "description": "Offers Viewer access across multiple views",
            "label": "Viewer"
          }
        }
      },
      "ui": {
        "description": "Offers Resource Viewer access across multiple views",
        "label": "Multiple Resource Views"
      }
    },
    "wes": {
      "targetAdapter": "token:jwt:gatekeeper",
      "itemFormat": "url",
      "interfaces": {
        "http:wes": "${url}"
      },
      "roles": {
        "execute": {
          "targetScopes": [
            "registered"
          ],
          "damRoleCategories": [
            "metadata",
            "list",
            "read",
            "write"
          ],
          "ui": {
            "description": "Run a Workflow against a configured WES API",
            "label": "WES Execute"
          }
        }
      },
      "ui": {
        "description": "Offers executing of workflow",
        "label": "Workflow Execution Schema"
      }
    }
  },
  "claimDefinitions": {
    "AcceptedTermsAndPolicies": {
      "ui": {
        "description": "Canonical URLs that indicate that a researcher or either organization has acknowledged the specific terms and conditions indicated by the URL",
        "infoUrl": "https://docs.google.com/document/d/11Wg-uL75ypU5eNu2p_xh9gspmbGtmLzmdq5VfPHBirE/edit#heading=h.pif6raoahha5",
        "label": "Accepted Terms and Policies"
      }
    },
    "AffiliationAndRole": {
      "ui": {
        "description": "The Identity’s roles within affiliated institutions as specified by eduPerson with specific vocabulary extensions",
        "infoUrl": "https://docs.google.com/document/d/11Wg-uL75ypU5eNu2p_xh9gspmbGtmLzmdq5VfPHBirE/edit#heading=h.vod2g2cjxjmp",
        "label": "Affiliation and Role"
      }
    },
    "ControlledAccessGrants": {
      "ui": {
        "description": "A list of datasets or other objects for which controlled access has been granted to this researcher",
        "infoUrl": "https://docs.google.com/document/d/11Wg-uL75ypU5eNu2p_xh9gspmbGtmLzmdq5VfPHBirE/edit#heading=h.s459xswt1qt3",
        "label": "Controlled Access Grants"
      }
    },
    "ResearcherStatus": {
      "ui": {
        "description": "Canonical URLs that indicate that the person has been acknowledged to be a bona fide researcher",
        "infoUrl": "https://docs.google.com/document/d/11Wg-uL75ypU5eNu2p_xh9gspmbGtmLzmdq5VfPHBirE/edit#heading=h.jdh4ks6h3zzp",
        "label": "Bona Fide Researcher Status"
      }
    },
    "testing.only.Whitelist": {
      "ui": {
        "description": "Claim only to be used for testing on synthetic/public datasets",
        "label": "Claim only to be used for testing on synthetic/public datasets"
      }
    },
    "com.dnastack.test.claim": {
      "ui": {
        "description": "Claim for testing autocomplete",
        "label": "Autocomplete testing claim"
      }
    }
  },
  "testPersonas": {
    "administrator": {
      "passport": {
        "standardClaims": {
          "iss": "$$E2E_BASE_URI$$",
          "email": "admin@nci.nih.gov",
          "picture": "https://pbs.twimg.com/profile_images/3443048571/ef5062acfce64a7aef1d75b4934fbee6_400x400.png"
        }
      },
      "ui": {
        "label": "Administrator"
      }
    },
    "test_user_with_access": {
      "passport": {
        "standardClaims": {
          "iss": "$$E2E_PASSPORT_ISSUER$$",
          "email": "test-user-with-access@dnastack.com",
          "picture": "https://pbs.twimg.com/profile_images/3443048571/ef5062acfce64a7aef1d75b4934fbee6_400x400.png"
        },
        "ga4ghAssertions": [
          {
            "type": "testing.only.Whitelist",
            "source": "$$E2E_TRUSTED_SOURCE$$",
            "value": "$$E2E_TEST_WHITELIST_VALUE$$",
            "assertedDuration": "1d",
            "expiresDuration": "30d",
            "by": "so"
          }
        ]
      },
      "access": [
        "ga4gh-apis/beacon/discovery",
        "ga4gh-apis/gcs_read/viewer",
        "thousand-genomes/discovery-access/discovery",
        "thousand-genomes/gcs-file-access/viewer",
        "wes-resource/wes-view/execute"
      ],
      "ui": {
        "label": "Test User Access"
      }
    },
    "test_user_without_access": {
      "passport": {
        "standardClaims": {
          "iss": "$$E2E_TRUSTED_SOURCE$$",
          "email": "test-user-no-access@dnastack.com",
          "picture": "https://pbs.twimg.com/profile_images/497015367391121408/_cWXo-vA_400x400.jpeg"
        },
        "ga4ghAssertions": []
      },
      "access": [],
      "ui": {
        "label": "Test user no access"
      }
    },
    "dr_joe_era_commons": {
      "passport": {
        "standardClaims": {
          "iss": "https://login.nih.gov/oidc",
          "email": "dr_joe@era.nih.gov",
          "picture": "https://pbs.twimg.com/profile_images/3443048571/ef5062acfce64a7aef1d75b4934fbee6_400x400.png"
        },
        "ga4ghAssertions": [
          {
            "type": "some.Claim",
            "source": "$$E2E_TRUSTED_SOURCE$$",
            "value": "true",
            "assertedDuration": "1d",
            "expiresDuration": "30d",
            "by": "so"
          }
        ]
      },
      "access": [],
      "ui": {
        "label": "Dr. Joe (eRA Commons)"
      }
    },
    "dr_joe_elixir": {
      "passport": {
        "standardClaims": {
          "iss": "$$E2E_TRUSTED_SOURCE$$",
          "email": "dr_joe@faculty.uni-heidelberg.de",
          "picture": "https://pbs.twimg.com/profile_images/497015367391121408/_cWXo-vA_400x400.jpeg"
        },
        "ga4ghAssertions": []
      },
      "access": [],
      "ui": {
        "label": "Dr. Joe (Elixir)"
      }
    },
    "john": {
      "passport": {
        "standardClaims": {
          "iss": "$$E2E_TRUSTED_SOURCE$$",
          "email": "you@me.com",
          "picture": "http://icons.iconarchive.com/icons/dapino/people/256/brown-man-icon.png"
        },
        "ga4ghAssertions": []
      },
      "ui": {
        "label": "John Persona"
      }
    },
    "undergrad_candice": {
      "passport": {
        "standardClaims": {
          "iss": "$$E2E_TRUSTED_SOURCE$$",
          "email": "undergrad_candice@uni-heidelberg.de",
          "picture": "https://www.cl.uni-heidelberg.de/images/siegel_uni_hd_gross.gif"
        }
      },
      "ui": {
        "label": "Undergrad Candice"
      }
    }
  },
  "options": {
    "readOnlyMasterRealm": true,
    "gcpManagedKeysMaxRequestedTtl": "7d",
    "gcpManagedKeysPerAccount": 8,
    "gcpServiceAccountProject": "$$E2E_SERVICE_ACCOUNT_PROJECT$$",
    "descriptors": {
      "gcpManagedKeysMaxRequestedTtl": {
        "label": "GCP Managed Keys Maximum Requested TTL",
        "description": "The maximum TTL of a requested access token on GCP and this setting is used in conjunction with managedKeysPerAccount to set up managed access key rotation policies within DAM (disabled by default)",
        "regexp": "^([0-9]+d)?([0-9]+h)?([0-9]+m)?([0-9]+s)?$",
        "type": "string:duration",
        "min": "2h",
        "max": "180d"
      },
      "gcpManagedKeysPerAccount": {
        "label": "GCP Managed Keys Per Account",
        "description": "GCP allows up to 10 access keys of more than 1h to be active per account and this option allows DAM to manage a subset of these keys",
        "type": "int",
        "min": "0",
        "max": "10"
      },
      "gcpServiceAccountProject": {
        "label": "GCP Service Account Project",
        "description": "The GCP Project ID where service accounts will be created by DAM and where DAM has permissions to create these service accounts (not setting this value will disable the service account target adapter)",
        "regexp": "^[A-Za-z][-A-Za-z0-9]{1,30}[A-Za-z]$",
        "type": "string"
      },
      "readOnlyMasterRealm": {
        "label": "Read Only Master Realm",
        "description": "When 'true', the master realm becomes read-only and updates to the configuration must be performed via updating a config file",
        "type": "bool",
        "defaultValue": "false"
      },
      "whitelistedRealms": {
        "label": "Whitelisted Realms",
        "description": "By default any realm name can be created, but when this option is populated the DAM will only allow realms on this list to be created (the master realm is allowed implicitly)",
        "regexp": "^[\\w\\-\\.]+$",
        "type": "string",
        "isList": true
      }
    }
  },
  "ui": {
    "description": "Test Genome Repository A",
    "label": "Test Genome Repository A"
  }
}
