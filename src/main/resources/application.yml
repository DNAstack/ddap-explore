server:
  # Google Cloud Run tells us where to listen using the PORT environment variable.
  # Our k8s deployments use the Spring Boot name, SERVER_PORT.
  # The following line allows either PORT or SERVER_PORT to specify the port the service listens on.
  # If neither is specified, the default port will be 8085. This is a good default for local development.
  # If both are specified (not recommended) SERVER_PORT will take precedence.
  port: ${PORT:8085}

ui:
  title: "DDAP"
  default-module: data
  in-standalone-mode: ${ddap.dam-facade}
  authorization-on-init-required: false
  sidebar-enabled: true
  feature-realm-input-enabled: true
  feature-administration-enabled: true
  feature-explore-data-enabled: true
  feature-beacons-enabled: true
  feature-workflows-enabled: true
  feature-workflows-trs-integration-enabled: false
  trs-base-url: "https://dockstore.org/api/api/ga4gh/v2"
  trs-accepted-tool-classes: ['Workflow']
  trs-accepted-version-descriptor-types: ['WDL']
  list-page-size: 20

dams:
  1:
    # If you try to run the DAM and IC locally, they need to use different domain names,
    # otherwise their cookies will conflict.
    # Unfortunately when not using HTTPS, DAM requires it's domain to START with localhost,
    # and Hydra requires it's domain to END with localhost
    base-url: http://localhost.dam.localhost:8083/
    client-id: 812c1319-fef5-4aa6-9393-beb5ec8facdf
    client-secret: 0000-0000-0000-0000-0000
    ui-url: http://localhost:8087/

ic:
  ui-url: http://localhost:8086/

dam-facade:
  base-url: ${ddap.public-uri}
  oauth2-url: https://sample-oauth-server/common
  client-id: foo
  client-secret: bar
  resource-name: WES
  resource-description: Workflow Execution Service
  view-name: WES-SOLO
  view-description: Standalone Mode
  wes-server-url: https://wes.experimental.dnastack.com  # This is a fake location.
  wes-resource-id: 0000-0000-0000-0000-0000

ddap:
  dam-facade: false
  public-uri: http://localhost:8085
  default-realm: dnastack
  # Development key should not be deployed. There is an e2e test preventing this.
  signingKey: |
    VGhlcmUgb25jZSB3YXMgYSBsYW5ndWFnZSBjYWxsZWQgYmFzaApJdCdzIHNlbWFudGljcyB3ZXJlIG9mdGVuIHF1aXRlI
    HJhc2gKQnV0IGl0IHdvcmtlZCwgbW9yZSBvciBsZXNzCkV2ZW4gdGhvdWdoIGl0J3MgYSBtZXNzClNvIEkgZ3Vlc3MgaX
    Qgc3RheXMgb3V0IG9mIHRoZSB0cmFzaAo=
  cors:
    origins: "http://localhost:4200"
  cookies:
    # Default to false so cookies work on http://localhost
    # e2e tests will remind you to set this true in real deployments!
    secure: false
    encryptor:
      password: 'abcdefghijk'
      salt: '598953e322' # must be at least 8 char length and hexadecimal
  command-line-service:
    aud: ${ddap.public-uri}
    ttl: PT10M
    signingKey: ${ddap.signingKey}
  state-handler:
    aud: ${ddap.public-uri}
    ttl: PT10M
    signingKey: ${ddap.signingKey}
  wdl-validator:
    url: https://wdl-validator.staging.dnastack.com
    token: 1c0c52bedbc8c88bd998fa919243f32bcf5b201818288f112a477d118cc24d36
logging:
  level:
    com:
      dnastack:
        ddap: DEBUG

---

spring:
  profiles: auth
  security:
    user:
      name: dev
      password: dev
